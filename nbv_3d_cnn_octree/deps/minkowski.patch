diff --git a/src/3rdparty/concurrent_unordered_map.cuh b/src/3rdparty/concurrent_unordered_map.cuh
index ed8e1b2..54394f7 100644
--- a/src/3rdparty/concurrent_unordered_map.cuh
+++ b/src/3rdparty/concurrent_unordered_map.cuh
@@ -24,6 +24,7 @@
 #include <cudf/detail/utilities/hash_functions.cuh>
 #include <cudf/detail/utilities/device_atomics.cuh>
 #include <cudf/utilities/error.hpp>
+#include <thrust/execution_policy.h>
 
 #include <thrust/pair.h>
 #include <thrust/count.h>
diff --git a/src/coordinate_map_gpu.cu b/src/coordinate_map_gpu.cu
index fb7325d..f3fafac 100644
--- a/src/coordinate_map_gpu.cu
+++ b/src/coordinate_map_gpu.cu
@@ -36,6 +36,8 @@
 #include <thrust/iterator/counting_iterator.h>
 #include <thrust/iterator/transform_iterator.h>
 #include <thrust/sort.h>
+#include <thrust/remove.h>
+#include <thrust/unique.h>
 
 namespace minkowski {
 
diff --git a/src/coordinate_map_manager.cu b/src/coordinate_map_manager.cu
index 41d40e9..a8d4cfc 100644
--- a/src/coordinate_map_manager.cu
+++ b/src/coordinate_map_manager.cu
@@ -91,9 +91,11 @@ struct insert_and_map_functor<coordinate_type, coordinate_field_type,
 
     LOG_DEBUG("cuda_copy_n with num_blocks:", num_blocks,
               "mapping.size():", mapping.size());
-    detail::cuda_copy_n<default_types::index_type, int64_t>
-        <<<num_blocks, CUDA_NUM_THREADS>>>(mapping.cbegin(), mapping.size(),
-                                           th_mapping.data_ptr<int64_t>());
+    if (num_blocks > 0) {
+        detail::cuda_copy_n<default_types::index_type, int64_t>
+            <<<num_blocks, CUDA_NUM_THREADS>>>(mapping.cbegin(), mapping.size(),
+                                               th_mapping.data_ptr<int64_t>());
+    }
 
     auto const num_inv_blocks =
         (inverse_mapping.size() + CUDA_NUM_THREADS - 1) / CUDA_NUM_THREADS;
diff --git a/src/spmm.cu b/src/spmm.cu
index 8891a56..4d0206b 100644
--- a/src/spmm.cu
+++ b/src/spmm.cu
@@ -35,6 +35,8 @@
 #include <c10/cuda/CUDACachingAllocator.h>
 #include <torch/extension.h>
 #include <torch/script.h>
+#include <thrust/execution_policy.h>
+#include <thrust/sort.h>
 
 namespace minkowski {
 
